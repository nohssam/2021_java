package com.ict01.grammar01;

public class Ex00_4 {
	// 단순 if문 : 조건식이 참일때만 실행한다.
	// 거짓일때는 if문 무시
	// 형식 : if(조건식){
	// 조건식이 참일때 실행할 문장 ;
	// 조건식이 참일때 실행할 문장 ;
	// }
	// 단, 실행할 문장이 한 줄이면 { }(블록) 생략 가능

	// if ~ else ~ : 조건식이 참일때와 거짓일때 각각 나눠서 처리한다.
	// 형식 : if(조건식){
	// 조건식이 참일때 실행할 문장;
	// 조건식이 참일때 실행할 문장;
	// } else {
	// 조건식이 거짓일때 실행할 문장;
	// 조건식이 거짓일때 실행할 문장;
	// }
	// 단, 실행할 문장이 한 줄이면 생략 가능하다.

	// 다중 if문 : 조건식이 거짓일때 다시 조건식을 사용한다.
	// if(조건식1){
	// 조건식1이 참일때 실행;
	// } else if(조건식2){
	// 조건식1은 거짓이면서 조건식2는 참일때 실행 ;
	// } else if(조건식3){
	// 조건식1,2은 거짓이면서 조건식3는 참일때 실행 ;
	// } else {
	// 조건식 1,2,3 모두 거짓일때, 나머지인 경우
	// }

	// switch ~ case문 : if문과 같은 분기문
	// if문 의 조건식은 boolean형, 비교연산, 논리연산
	// switch문은 byte,short, int, char, String 일때 사용
	// 범위가 나오면 기본적으로는 if문을 사용하자
	// switch 문은 100% if문으로 변환이 가능하다.
	// 형식 : 
	//   switch(인자값(char,int,String)) {
	// case 조건값1 : 인자값이 요구하는 값이 조건값1일때 실행할 문장 ; break;
	// case 조건값2 : 인자값이 요구하는 값이 조건값2일때 실행할 문장 ; break;
	// case 조건값3 : 인자값이 요구하는 값이 조건값3일때 실행할 문장 ; break;
	//    default : 조건값1,2,3 모두 요구하는 값이 아닐때 , 즉 나머지  
	// }
	//  ** 주의사항 : break문이 없으면 
	//                다음 break를 만날때까지 모든 실행문을 실행한다.
	// break문은 해당 switch문을 빠져나가는 역할을 한다.

}
